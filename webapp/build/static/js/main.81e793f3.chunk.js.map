{"version":3,"sources":["constants/index.js","utils/has.js","services/logger.js","api/index.js","services/httpService.js","models/levelParams.js","store/actions.js","utils/format.js","components/SectionHead.jsx","components/SectionFunding.jsx","components/SectionVolume.jsx","models/index.js","models/level.js","models/levels.js","models/stat.js","components/LevelsHead.jsx","store/getters.js","components/common/form/Checkbox.jsx","components/LevelsResistance.jsx","components/LevelsSupport.jsx","components/icons/IconPlus.jsx","components/LevelsCustom.jsx","components/Chart.jsx","components/common/Loader.jsx","app/App.jsx","store/modules/levels.js","store/modules/stat.js","store/modules/parameters.js","store/modules/thresholds.js","store/modules/websocket.js","store/reducer.js","store/middlewares/socketMiddleware.js","services/socketMessages.js","store/index.js","store/middlewares/actionStringMiddleware.js","index.js"],"names":["STAT_UPDATE","has","Object","prototype","hasOwnProperty","obj","key","call","getErrorMessage","error","msg","message","data","response","statusText","apiType","prod","test","socketType","ROOT_URL","WESOCKET_ROOT","logger","process","url","parameters","thresholds","funding","levels","axios","interceptors","request","use","config","Promise","reject","logName","status","levelParams","timeframe","candles","minTouches","likelinessPercent","bouncePercent","httpService","fetchParameters","a","get","fetchParametersUpdate","payload","put","id","fetchFunding","fetchThresholds","thresholdsAlertsUpdate","fetchLevels","params","post","getLevels","addLevel","res","deleteLevel","delete","dispatch","forEach","value","threshold_value_percent","threshold_type","volume_1m","volume_5m","volume_1h","volume_1d","resistance","OPEN_INTEREST","support","formData","custom","chart","map","x","t","Timestamp","o","Open","h","High","l","Low","c","Close","mapLevel","price","idx","chartLine","distance","supportCopy","customCopy","resistanceCopy","toggleChartLine","type","getState","shallowCopy","levelsModule","level","splice","thresholdsUpdateAlert","item","thresholdsUpdateAlertRequest","period","thresholdsModule","threshold","find","String","toUpperCase","formatNumber","numeral","format","split","join","formatVolume","percent","connect","stat","statModule","parametersUpdate","parameter","parametersModule","handleChange","e","target","updateValue","preventDefault","handleEnter","document","getElementById","blur","className","VOLUME_NUMBER_OF_TRADES","onChange","onKeyUp","onBlur","volume_of_last","open_inerest","current_funding_rate","predicted_funding_rate","next_funding_rate_change","types","placeholder","volume1m_change","volume1m_change_percent","volume5m_change","volume5m_change_percent","volume1h_change","volume1h_change_percent","volume1d_change","volume1d_change_percent","loading","hasError","TIMEFRAMES","volume_change_1m","volume_change_5m","volume_change_1h","volume_change_1d","custom_levels","timeframes","useState","models","updateLevel","Number","update","htmlFor","readOnly","el","onClick","mapAnnotationsLine","borderColor","label","enabled","content","position","drawTime","borderWidth","mode","scaleID","getDistanceLevels","store","sortType","result","Decimal","minus","div","toFixed","sort","getAnnotations","filter","Checkbox","checked","toggleResistanceLine","levelsList","toggleSupportLine","IconPlus","version","xmlns","y","viewBox","d","customLevelAdd","price_level","shallowCustom","customLevelRemove","newLevel","updateNewLevel","annotations","options","updateOptions","useEffect","prevState","window","TradingView","widget","mountChart","includes","wsConnect","fetchData","levelsReducer","state","action","statReducer","parametersReducer","thresholdsReducer","websocketModule","connected","websocketReducer","reducer","socketMiddleware","socket","originalSend","onSend","args","apply","next","close","WebSocket","send","onopen","onOpen","onclose","onClose","onerror","onError","onmessage","JSON","parse","socketMessages","stringify","subscribe","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","Array","isArray","createStore","applyMiddleware","ReactDOM","render"],"mappings":"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","file":"static/js/main.81e793f3.chunk.js","sourcesContent":["// STAT\nexport const STAT_REQUEST = 'STAT_REQUEST';\nexport const STAT_SUCCESS = 'STAT_SUCCESS';\nexport const STAT_FAILURE = 'STAT_FAILURE';\nexport const STAT_UPDATE = 'STAT_UPDATE';\n\nexport const TIMEFRAME_UPDATE = 'TIMEFRAME_UPDATE';\n\n// CUSTOM LEVELS\nexport const CUSTOM_LEVELS_REQUEST = 'CUSTOM_LEVELS_REQUEST';\nexport const CUSTOM_LEVELS_SUCCESS = 'CUSTOM_LEVELS_SUCCESS';\nexport const CUSTOM_LEVELS_FAILURE = 'CUSTOM_LEVELS_FAILURE';\nexport const CUSTOM_LEVELS_UPDATE = 'CUSTOM_LEVELS_UPDATE';\nexport const CUSTOM_LEVELS_ADD = 'CUSTOM_LEVELS_ADD';\nexport const CUSTOM_LEVELS_REMOVE = 'CUSTOM_LEVELS_REMOVE';\n\n// PARAMETERS\nexport const PARAMETERS_REQUEST = 'PARAMETERS_REQUEST';\nexport const PARAMETERS_SUCCESS = 'PARAMETERS_SUCCESS';\nexport const PARAMETERS_FAILURE = 'PARAMETERS_FAILURE';\nexport const PARAMETERS_UPDATE = 'PARAMETERS_UPDATE';\nexport const PARAMETERS_UPDATE_VALUE = 'PARAMETERS_UPDATE_VALUE';\n\n// THRESHOLDS\nexport const THRESHOLDS_REQUEST = 'THRESHOLDS_REQUEST';\nexport const THRESHOLDS_SUCCESS = 'THRESHOLDS_SUCCESS';\nexport const THRESHOLDS_FAILURE = 'THRESHOLDS_FAILURE';\nexport const THRESHOLDS_UPDATE = 'THRESHOLDS_UPDATE';\nexport const THRESHOLDS_UPDATE_ALERT = 'THRESHOLDS_UPDATE_ALERT';\n\n// CHART\nexport const CHART_REQUEST = 'CHART_REQUEST';\nexport const CHART_SUCCESS = 'CHART_SUCCESS';\nexport const CHART_FAILURE = 'CHART_FAILURE';\nexport const CHART_UPDATE = 'CHART_UPDATE';\n\n// CHART\nexport const LEVELS_REQUEST = 'LEVELS_REQUEST';\nexport const LEVELS_SUCCESS = 'LEVELS_SUCCESS';\nexport const LEVELS_FAILURE = 'LEVELS_FAILURE';\nexport const LEVELS_UPDATE = 'LEVELS_UPDATE';\n\n// WEBSOCKET\nexport const  WS_CONNECT = 'WS_CONNECT';\nexport const  WS_CONNECTING = 'WS_CONNECTING';\nexport const  WS_CONNECTED = 'WS_CONNECTED';\nexport const  WS_DISCONNECT = 'WS_DISCONNECT';\nexport const  WS_DISCONNECTED = 'WS_DISCONNECTED';\nexport const  WS_ERROR = 'WS_ERROR';\nexport const  WS_MESSAGE = 'WS_MESSAGE';\n","const has = Object.prototype.hasOwnProperty;\n\nexport default (obj, key) => {\n  return has.call(obj, key);\n};\n","import * as Logger from 'logplease';\nimport has from '../utils/has';\n\nconst ENV_MODE = process.env.NODE_ENV === 'development';\n\nconst onLogger = (name, msg, type) => {\n  if (!ENV_MODE) return;\n  const newLogger = Logger.create(name);\n  newLogger[type](msg);\n};\n\nconst getErrorMessage = (error = 'Somthing Wrong') => {\n  let msg = error;\n  if (error instanceof Object) {\n    switch (true) {\n      case has(error, 'message'):\n        msg = error.message;\n        break;\n      case has(error, 'msg'):\n        msg = error.msg;\n        break;\n      case has(error, 'data'):\n        msg = error.data;\n        break;\n      case has(error, 'response'):\n        msg = error.response.statusText;\n        break;\n      default:\n        break;\n    }\n  }\n  return msg;\n};\n\nexport { getErrorMessage };\n\nexport default {\n  debug: (msg = '', name = '') => {\n    onLogger(name, msg, 'debug');\n  },\n  info: (msg = '', name = '') => {\n    onLogger(name, msg, 'info');\n  },\n  error: (error = 'Something wrong!', name = '') => {\n    onLogger(name, getErrorMessage(error), 'error');\n  },\n  warn: (msg = '', name = '') => {\n    onLogger(name, msg, 'warn');\n  },\n  log: (msg = '', name = '') => {\n    onLogger(name, msg, 'log');\n  }\n};\n","import logger from '../services/logger';\n\nconst tempUrl = '678a70da.ngrok.io';\n\nconst apiType = {\n  // prod: 'http://0.0.0.0:5000',\n  prod: 'http://167.99.69.87:5000',\n  test: `http://${tempUrl}`,\n};\n\nconst socketType = {\n  // prod: 'ws://0.0.0.0:5000/ws/ticks/',\n  prod: 'ws://167.99.69.87:5000/ws/ticks/',\n  test: `ws://${tempUrl}/ws/ticks/`,\n};\n\nconst API_MODE = process.env.REACT_APP_API;\nconst ROOT_URL = apiType[API_MODE];\nconst WESOCKET_ROOT = socketType[API_MODE];\n\nlogger.info(process.env.NODE_ENV, 'ENV');\nlogger.info(API_MODE, 'MODE');\nlogger.info(ROOT_URL, 'API URL');\nlogger.info(WESOCKET_ROOT, 'WEBSOCKET URL');\n\nconst url = {\n  parameters: `${ROOT_URL}/bitmex/parameters/`,\n  thresholds: `${ROOT_URL}/bitmex/thresholds`,\n  funding: `${ROOT_URL}/bitmex/funding`,\n  levels: `${ROOT_URL}/bitmex/levels/`,\n}\n\nexport { WESOCKET_ROOT };\n\nexport default url;\n\n","import url from \"../api\";\nimport axios from \"axios\";\nimport logger, { getErrorMessage } from \"./logger\";\n\naxios.interceptors.request.use((config) => {\n  return config;\n}, (error) => {\n  return Promise.reject(error);\n});\n\naxios.interceptors.response.use((response) => {\n  const logName = `[URL: ${response.config.url}, STATUS: ${response.status}]`;\n  if (response.status === 200) {\n    logger.info(response.data, logName);\n  } else {\n    logger.log(response.data, logName);\n  }\n  return response;\n}, (error) => {\n  const logName = `[URL: ${error.response.config.url}, STATUS: ${error.response.status}]`;\n  logger.error(error, logName);\n  return Promise.reject(getErrorMessage(error));\n});\n\nclass HttpService {\n  fetchParameters = async () => {\n    try {\n      const { data } = await axios.get(url.parameters);\n      return data;\n    } catch (e) {\n      throw e;\n    }\n  };\n  fetchParametersUpdate = async (payload) => {\n    try {\n      await axios.put(`${url.parameters}${payload.id}/`, payload);\n      return;\n    } catch (e) {\n      return;\n    }\n  };\n  fetchFunding = async () => {\n    try {\n      const { data } = await axios.get(url.funding);\n      return data;\n    } catch (e) {\n      throw e;\n    }\n  };\n  fetchThresholds = async () => {\n    try {\n      const { data } = await axios.get(url.thresholds);\n      return data;\n    } catch (e) {\n      throw e;\n    }\n  };\n  thresholdsAlertsUpdate = async (payload) => {\n    try {\n      await axios.put(`${url.thresholds}/${payload.id}/`, payload);\n      return;\n    } catch (e) {\n      return;\n    }\n  };\n  fetchLevels = async (params) => {\n    try {\n      const { data } = await axios.post(url.levels, params);\n      return data;\n    } catch (e) {\n      throw e;\n    }\n  };\n  getLevels = async () => {\n    try {\n      const { data } = await axios.get(url.levels);\n      return data;\n    } catch (e) {\n      throw e;\n    }\n  };\n  addLevel = async (params) => {\n    try {\n      const res = await axios.put(url.levels, params);\n      if (res.status !== 200) throw res.data;\n      return;\n    } catch (e) {\n      throw e;\n    }\n  };\n  deleteLevel = async (params) => {\n    try {\n      const res = await axios.delete(url.levels, { data: params});\n      if (res.status !== 200) throw res.data;\n      return;\n    } catch (e) {\n      throw e;\n    }\n  }\n}\n\nexport default HttpService;\n","const levelParams = {\n  timeframe: '6h',\n  candles: 200,\n  minTouches: 3,\n  likelinessPercent: 1.5,\n  bouncePercent: 5,\n}\n\nexport default levelParams;\n","import {\n  WS_CONNECT,\n  WS_CONNECTING,\n  WS_CONNECTED,\n  WS_DISCONNECT,\n  WS_DISCONNECTED,\n  PARAMETERS_FAILURE,\n  PARAMETERS_SUCCESS,\n  PARAMETERS_UPDATE,\n  PARAMETERS_REQUEST,\n  THRESHOLDS_REQUEST,\n  THRESHOLDS_SUCCESS,\n  THRESHOLDS_UPDATE,\n  THRESHOLDS_FAILURE,\n  STAT_UPDATE,\n  STAT_REQUEST,\n  STAT_SUCCESS,\n  STAT_FAILURE,\n  THRESHOLDS_UPDATE_ALERT,\n  LEVELS_REQUEST,\n  LEVELS_UPDATE,\n  LEVELS_SUCCESS,\n  LEVELS_FAILURE,\n  TIMEFRAME_UPDATE\n} from '../constants';\nimport HttpService from '../services/httpService';\nimport { WESOCKET_ROOT } from '../api';\nimport levelParams from '../models/levelParams';\n\nconst httpService = new HttpService();\n\nexport const wsConnect = () => dispatch =>\n  dispatch([WS_CONNECT, WESOCKET_ROOT]);\nexport const wsConnecting = () => WS_CONNECTING;\nexport const wsConnected = () => ({ type: WS_CONNECTED });\nexport const wsDisconnect = () => WS_DISCONNECT;\nexport const wsDisconnected = () => WS_DISCONNECTED;\n\nexport const fetchParameters = () => async dispatch => {\n  dispatch(PARAMETERS_REQUEST);\n  try {\n    const payload = await httpService.fetchParameters();\n    payload.forEach(({ key, value }) => {\n      dispatch([STAT_UPDATE, { [key]: value }]);\n    });\n    dispatch([PARAMETERS_UPDATE, payload]);\n    dispatch(PARAMETERS_SUCCESS);\n  } catch (e) {\n    dispatch(PARAMETERS_FAILURE);\n  }\n};\n\nexport const fetchParametersUpdate = type => async (dispatch, getState) => {\n  let value = getState().statModule.stat[type];\n  const parameter = getState().parametersModule.parameters.find(\n    ({ key }) => key === type\n  );\n\n  if (parameter) {\n    const payload = { ...parameter, value };\n    await httpService.fetchParametersUpdate(payload);\n    fetchParameters()(dispatch);\n  }\n};\n\nexport const parametersUpdate = (value, key) => async dispatch => {\n  dispatch([STAT_UPDATE, { [key]: value }]);\n};\n\nexport const fetchFunding = () => async dispatch => {\n  dispatch(STAT_REQUEST);\n  try {\n    const payload = await httpService.fetchFunding();\n    dispatch([STAT_UPDATE, payload]);\n    dispatch(STAT_SUCCESS);\n  } catch (e) {\n    dispatch(STAT_FAILURE);\n  }\n};\n\nexport const fetchThresholds = () => async dispatch => {\n  dispatch(THRESHOLDS_REQUEST);\n  try {\n    const payload = await httpService.fetchThresholds();\n    payload.forEach(\n      ({ timeframe, threshold_value_percent: value, threshold_type }) => {\n        switch (threshold_type) {\n          case 'VOLUME_CHANGE':\n            switch (timeframe) {\n              case '1m':\n                dispatch([THRESHOLDS_UPDATE_ALERT, { volume_1m: value }]);\n                break;\n              case '5m':\n                dispatch([THRESHOLDS_UPDATE_ALERT, { volume_5m: value }]);\n                break;\n              case '1h':\n                dispatch([THRESHOLDS_UPDATE_ALERT, { volume_1h: value }]);\n                break;\n              case '1d':\n                dispatch([THRESHOLDS_UPDATE_ALERT, { volume_1d: value }]);\n                break;\n              default:\n                break;\n            }\n            break;\n          case 'RESISTANCE':\n            dispatch([THRESHOLDS_UPDATE_ALERT, { resistance: value }]);\n            break;\n          case 'OPEN_INTEREST':\n            dispatch([THRESHOLDS_UPDATE_ALERT, { OPEN_INTEREST: value }]);\n            break;\n          case 'SUPPORT':\n            dispatch([THRESHOLDS_UPDATE_ALERT, { support: value }]);\n            break;\n          default:\n            break;\n        }\n      }\n    );\n    dispatch([THRESHOLDS_UPDATE, payload]);\n    dispatch(THRESHOLDS_SUCCESS);\n  } catch (e) {\n    dispatch(THRESHOLDS_FAILURE);\n  }\n};\n\nexport const fetchLevels = (params = {}) => async dispatch => {\n  const formData = { ...levelParams, ...params };\n  dispatch(LEVELS_REQUEST);\n  try {\n    const {\n      candles = [],\n      support = [],\n      resistance = [],\n      custom = [],\n    } = await httpService.fetchLevels(formData);\n    const chart = candles.map(x => {\n      return {\n        t: x.Timestamp,\n        o: x.Open,\n        h: x.High,\n        l: x.Low,\n        c: x.Close,\n        x: x.Timestamp,\n      };\n    });\n    const mapLevel = (price, idx) => ({\n      idx,\n      price,\n      chartLine: true,\n      distance: ''\n    });\n    const supportCopy = support.map(mapLevel);\n    const customCopy = custom.map(mapLevel);\n    const resistanceCopy = resistance.map(mapLevel);\n    dispatch([\n      LEVELS_UPDATE,\n      {\n        chart,\n        support: supportCopy,\n        resistance: resistanceCopy,\n        custom: customCopy\n      }\n    ]);\n    dispatch(LEVELS_SUCCESS);\n  } catch (e) {\n    dispatch(LEVELS_FAILURE);\n  }\n};\n\nexport const removeLevel = (idx, type) => async (dispatch, getState) => {\n  const shallowCopy = [...getState().levelsModule[type]];\n  shallowCopy.splice(idx, 1);\n  dispatch([LEVELS_UPDATE, { [type]: shallowCopy }]);\n};\n\nexport const toggleChartLine = (idx, type) => (dispatch, getState) => {\n  const shallowCopy = [...getState().levelsModule[type]];\n  const level = { ...shallowCopy[idx] };\n  shallowCopy.splice(idx, 1, { ...level, chartLine: !level.chartLine });\n  dispatch([LEVELS_UPDATE, { [type]: shallowCopy }]);\n};\n\nexport const toggleResistanceLine = idx => async (dispatch, getState) => {\n  toggleChartLine(idx, 'resistance')(dispatch, getState);\n};\n\nexport const toggleSupportLine = idx => async (dispatch, getState) => {\n  toggleChartLine(idx, 'support')(dispatch, getState);\n};\n\nexport const customLevelAdd = level => async (dispatch, getState) => {\n  dispatch(LEVELS_REQUEST);\n  const formData = { price_level: Number(level.price), type: 'CUSTOM' };\n  const shallowCustom = [...getState().levelsModule.custom, level];\n  const custom = shallowCustom.map((item, idx) => ({ ...item, idx }));\n  try {\n    await httpService.addLevel(formData);\n    dispatch([LEVELS_UPDATE, { custom }]);\n    dispatch(LEVELS_SUCCESS);\n    return 1;\n  } catch (e) {\n    dispatch(LEVELS_FAILURE);\n    return 0;\n  }\n};\n\nexport const updateTimeframe = (timeframe) => (dispatch) => {\n  dispatch([TIMEFRAME_UPDATE, timeframe]);\n}\n\nexport const customLevelRemove = level => async (dispatch, getState) => {\n  dispatch(LEVELS_REQUEST);\n  const formData = { price_level: level.price, type: 'CUSTOM' };\n  const custom = getState().levelsModule.custom.filter(\n    ({ idx }) => idx !== level.idx\n  );\n  try {\n    await httpService.deleteLevel(formData);\n    dispatch([LEVELS_UPDATE, { custom }]);\n    dispatch(LEVELS_SUCCESS);\n  } catch (e) {\n    dispatch(LEVELS_FAILURE);\n  }\n};\n\nexport const thresholdsUpdateAlert = (item, type) => async dispatch => {\n  if (typeof item === 'object') {\n    dispatch([THRESHOLDS_UPDATE_ALERT, { [item.type]: item.value }]);\n  } else {\n    dispatch([THRESHOLDS_UPDATE_ALERT, { [type]: item }]);\n  }\n};\n\nexport const thresholdsUpdateAlertRequest = (type, period = '') => async (\n  dispatch,\n  getState\n) => {\n  let threshold_value_percent = getState().thresholdsModule[type];\n  let threshold;\n  if (period) {\n    threshold = getState().thresholdsModule.thresholds.find(\n      ({ timeframe }) => timeframe === period\n    );\n  } else {\n    threshold = getState().thresholdsModule.thresholds.find(\n      ({ threshold_type }) => threshold_type === String(type).toUpperCase()\n    );\n  }\n\n  if (threshold) {\n    const payload = { ...threshold, threshold_value_percent };\n    await httpService.thresholdsAlertsUpdate(payload);\n    fetchThresholds()(dispatch);\n  }\n};\n\nexport const fetchData = () => dispatch => {\n  fetchParameters()(dispatch);\n  fetchFunding()(dispatch);\n  fetchThresholds()(dispatch);\n  fetchLevels()(dispatch);\n};\n\nexport const changeTrades = trades => async dispatch => {\n  dispatch([STAT_UPDATE, { trades }]);\n};\n","import numeral from 'numeral';\n\nexport const formatNumber = (value) => {\n  return numeral(value).format('0,0.[00]').split(',').join(' ');\n}\n\nexport const formatVolume = (value, percent) => {\n  // return `${formatNumber(value)} USD (${numeral(percent).format('0.00')}%)`\n  return `${value} USD (${percent}%)`\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchParametersUpdate, parametersUpdate, thresholdsUpdateAlertRequest, thresholdsUpdateAlert } from '../store/actions';\nimport { formatNumber } from '../utils/format';\n\nconst SectionHead = ({ thresholds, stat, thresholdsUpdateAlertRequest, thresholdsUpdateAlert, fetchParametersUpdate, parametersUpdate }) => {\n\n  const handleChange = (type) => (e) => {\n    const { value } = e.target;\n    if (type === 'VOLUME_NUMBER_OF_TRADES') parametersUpdate(value, type);\n    else thresholdsUpdateAlert({ type, value });\n  };\n\n  const updateValue = (type) => (e) => {\n    if (e) e.preventDefault()\n    if (type === 'VOLUME_NUMBER_OF_TRADES') fetchParametersUpdate(type);\n    else thresholdsUpdateAlertRequest(type);\n  };\n\n  const handleEnter = (id) => (e) => {\n    if (e.key === 'Enter') {\n      document.getElementById(id).blur();\n    }\n  }\n\n  return (\n    <div className=\"section\">\n      <ul className=\"section__list\">\n        <li className=\"section__item\">\n          <span className=\"section__value\">Price</span>\n          <span className=\"section__value\">{formatNumber(stat.price)} USD</span>\n        </li>\n        <li className=\"section__item\">\n          <div className=\"section__wrapper\">\n            <span className=\"section__value\">Volume of last</span>\n            <input\n              id='VOLUME_NUMBER_OF_TRADES'\n              type=\"number\"\n              value={stat.VOLUME_NUMBER_OF_TRADES}\n              onChange={handleChange('VOLUME_NUMBER_OF_TRADES')}\n              onKeyUp={handleEnter('VOLUME_NUMBER_OF_TRADES')}\n              onBlur={updateValue('VOLUME_NUMBER_OF_TRADES')}\n              className=\"section__input section__input--trades\"\n            />\n            <span className=\"section__value\">trades</span>\n          </div>\n          <span className=\"section__value\">{formatNumber(stat.volume_of_last)} USD</span>\n        </li>\n        <li className=\"section__item\">\n          <div className=\"section__wrapper\">\n            <span className=\"section__value\">Open Interest</span>\n            <input\n              id='OPEN_INTEREST'\n              type=\"number\"\n              value={thresholds.OPEN_INTEREST}\n              onChange={handleChange('OPEN_INTEREST')}\n              onKeyUp={handleEnter('OPEN_INTEREST')}\n              onBlur={updateValue('OPEN_INTEREST')}\n              className=\"section__input section__input--trades\"\n            />\n          </div>\n          <span className=\"section__value\">{formatNumber(stat.open_inerest)} USD</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default connect(({ thresholdsModule: thresholds, statModule: { stat } }) => ({ stat, thresholds }), { parametersUpdate, fetchParametersUpdate, thresholdsUpdateAlert, thresholdsUpdateAlertRequest })(SectionHead);\n","import React from \"react\";\nimport { connect } from 'react-redux';\n\nconst SectionFunding = ({ stat }) => {\n  return (\n    <div className=\"section\">\n      <ul className=\"section__list\">\n        <li className=\"section__item\">\n          <span className=\"section__value\">Current Funding Rate</span>\n          <span className=\"section__value\">{stat.current_funding_rate}</span>\n        </li>\n        <li className=\"section__item\">\n          <span className=\"section__value\">Predicted Funding Rate</span>\n          <span className=\"section__value\">{stat.predicted_funding_rate}</span>\n        </li>\n        <li className=\"section__item\">\n          <span className=\"section__value\">Next Funding Rate Change at</span>\n          <span className=\"section__value\">{stat.next_funding_rate_change}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default connect(({ statModule: { stat } }) => ({ stat }))(SectionFunding);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  thresholdsUpdateAlert,\n  thresholdsUpdateAlertRequest\n} from '../store/actions';\nimport { formatVolume } from '../utils/format';\n\nconst SectionVolume = ({\n  stat,\n  thresholds,\n  thresholdsUpdateAlert,\n  thresholdsUpdateAlertRequest\n}) => {\n  const types = [\n    ['volume_1m', '1m'],\n    ['volume_5m', '5m'],\n    ['volume_1h', '1h'],\n    ['volume_1d', '1d']\n  ];\n\n  const handleChange = idx => e => {\n    const { value } = e.target;\n    const {\n      [idx]: { 0: type, 1: period }\n    } = types;\n    thresholdsUpdateAlert({ type, value }, period);\n  };\n\n  const updateValue = idx => e => {\n    if (e) e.preventDefault();\n    const {\n      [idx]: { 0: type, 1: period }\n    } = types;\n    thresholdsUpdateAlertRequest(type, period);\n  };\n\n  const handleEnter = idx => e => {\n    if (e.key === 'Enter') {\n      document.getElementById(types[idx][0]).blur();\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <ul className=\"section__list\">\n        <li className=\"section__item\">\n          <div className=\"section__wrapper\">\n            <span className=\"section__value section__value--col\">\n              1m USD Volume Change\n            </span>\n            <input\n              id={types[0][0]}\n              type=\"text\"\n              value={thresholds.volume_1m}\n              onChange={handleChange(0)}\n              onKeyUp={handleEnter(0)}\n              onBlur={updateValue(0)}\n              placeholder=\"alert threshold in %\"\n              className=\"section__input section__input--level\"\n            />\n          </div>\n          <span className=\"section__value\">\n            {formatVolume(stat.volume1m_change, stat.volume1m_change_percent)}\n          </span>\n        </li>\n        <li className=\"section__item\">\n          <div className=\"section__wrapper\">\n            <span className=\"section__value section__value--col\">\n              5m USD Volume Change\n            </span>\n            <input\n              id={types[1][0]}\n              type=\"text\"\n              value={thresholds.volume_5m}\n              onChange={handleChange(1)}\n              onKeyUp={handleEnter(1)}\n              onBlur={updateValue(1)}\n              placeholder=\"alert threshold in %\"\n              className=\"section__input section__input--level\"\n            />\n          </div>\n          <span className=\"section__value\">{formatVolume(stat.volume5m_change, stat.volume5m_change_percent)}</span>\n        </li>\n        <li className=\"section__item\">\n          <div className=\"section__wrapper\">\n            <span className=\"section__value section__value--col\">\n              1h USD Volume Change\n            </span>\n            <input\n              id={types[2][0]}\n              type=\"text\"\n              value={thresholds.volume_1h}\n              onChange={handleChange(2)}\n              onKeyUp={handleEnter(2)}\n              onBlur={updateValue(2)}\n              placeholder=\"alert threshold in %\"\n              className=\"section__input section__input--level\"\n            />\n          </div>\n          <span className=\"section__value\">{formatVolume(stat.volume1h_change, stat.volume1h_change_percent)}</span>\n        </li>\n        <li className=\"section__item\">\n          <div className=\"section__wrapper\">\n            <span className=\"section__value section__value--col\">\n              1d USD Volume Change\n            </span>\n            <input\n              id={types[3][0]}\n              type=\"text\"\n              value={thresholds.volume_1d}\n              onChange={handleChange(3)}\n              onKeyUp={handleEnter(3)}\n              onBlur={updateValue(3)}\n              placeholder=\"alert threshold in %\"\n              className=\"section__input section__input--level\"\n            />\n          </div>\n          <span className=\"section__value\">{formatVolume(stat.volume1d_change, stat.volume1d_change_percent)}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default connect(\n  ({ thresholdsModule: thresholds, statModule: { stat } }) => ({\n    thresholds,\n    stat\n  }),\n  { thresholdsUpdateAlert, thresholdsUpdateAlertRequest }\n)(SectionVolume);\n","import level from './level';\nimport levels from './levels';\nimport stat from './stat';\nimport levelParams from './levelParams';\n\nexport default { level, levels, stat, levelParams };\n","const level = {\n  idx: '',\n  price: '',\n  distance: '',\n  chartLine: true,\n}\n\nexport default level;\n","const levels = {\n  loading: false,\n  hasError: false,\n  chart: [],\n  support: [],\n  resistance: [],\n};\n\nexport default levels;","const stat = {\n  price: 0,\n  volume_of_last: 0,\n  VOLUME_NUMBER_OF_TRADES: '',\n  OPEN_INTEREST: '',\n  TIMEFRAMES: '',\n  open_inerest: 0,\n  current_funding_rate: '0',\n  predicted_funding_rate: '0',\n  next_funding_rate_change: '0',\n  volume1m_change: 0,\n  volume1m_change_percent: 0,\n  volume5m_change: 0,\n  volume5m_change_percent: 0,\n  volume1h_change: 0,\n  volume1h_change_percent: 0,\n  volume1d_change: 0,\n  volume1d_change_percent: 0,\n  volume_change_1m: '',\n  volume_change_5m: '',\n  volume_change_1h: '',\n  volume_change_1d: '',\n  resistance: [],\n  support: [],\n  custom_levels: [],\n}\n\nexport default stat;","import React, { useState } from 'react';\nimport models from '../models';\nimport { connect } from 'react-redux';\nimport { fetchLevels } from '../store/actions';\n\nconst LevelsHead = ({ fetchLevels, timeframes }) => {\n\n  const [level, updateLevel] = useState(models.levelParams);\n\n  const handleChange = (type) => (e) => {\n    const value = type === 'candles' ? Number(e.target.value) : e.target.value;\n    updateLevel({ ...level, [type]: value });\n  }\n\n  const update = async (e) => {\n    e.preventDefault();\n    fetchLevels(level);\n    return;\n  }\n\n  return (\n    <div className=\"levels\">\n      <form>\n        <div className=\"levels__row\">\n         <div className='levels__input-wrapper'>\n           <label className=\"levels__label\" htmlFor=\"timeframe\">Timeframe</label>\n           <div className=\"levels__select-wrapper\">\n              <input value={level.timeframe} readOnly placeholder=\"timeframe\" className=\"levels__input levels__input--like-select\"/>\n              <select id='timeframe' onChange={handleChange('timeframe')} placeholder=\"timeframe\" className=\"levels__select\" value={level.timeframe}>\n                { timeframes.split(',').map((el, idx) => {\n                  return <option key={idx} value={el}>{el}</option>\n                }) }\n              </select>\n           </div>\n         </div>\n          <div className='levels__input-wrapper'>\n            <label className=\"levels__label\" htmlFor=\"candles\">Candles</label>\n            <input id='candles' onChange={handleChange('candles')} value={level.candles} type=\"number\" placeholder=\"candles\" className=\"levels__input \"/>\n          </div>\n        </div>\n        <div className=\"levels__row\">\n          <div className='levels__input-wrapper'>\n            <label className=\"levels__label\" htmlFor=\"min_touches\">Min touches</label>\n            <input id='min_touches' onChange={handleChange('minTouches')} value={level.minTouches} type=\"number\" placeholder=\"min touches\" className=\"levels__input\"/>\n          </div>\n          <div className='levels__input-wrapper'>\n            <label className=\"levels__label\" htmlFor=\"likeliness\">Likeliness percent</label>\n            <input id='likeliness' onChange={handleChange('likelinessPercent')} value={level.likelinessPercent} type=\"number\" placeholder=\"likeliness percent\" className=\"levels__input\"/>\n          </div>\n          <div className='levels__input-wrapper'>\n            <label className=\"levels__label\" htmlFor=\"bounce\">Bounce percent</label>\n            <input id='bounce' onChange={handleChange('bouncePercent')} value={level.bouncePercent} type=\"number\" placeholder=\"bounce percent\" className=\"levels__input\"/>\n          </div>\n          <button onClick={update} className=\"levels__submit\" type=\"submit\">update</button>\n        </div>\n      </form>\n    </div>\n  )\n};\n\nexport default connect(\n  ({ statModule: { stat } }) => ({ timeframes: stat.TIMEFRAMES }),\n  { fetchLevels }\n)(LevelsHead);","import { Decimal } from 'decimal.js';\n\nexport const mapAnnotationsLine = (type) => (item, idx) => {\n  let borderColor = 'red';\n  switch (type) {\n    case 'resistance':\n      borderColor = 'red';\n      break;\n    case 'support':\n      borderColor = 'blue';\n      break;\n    case 'custom':\n      borderColor = 'green';\n      break;\n    default:\n      break;\n  }\n  return {\n    label: {\n      enabled: false,\n      content: 'Test label',\n      position: 'right'\n    },\n    drawTime: 'afterDraw',\n    borderColor,\n    borderWidth: 0.5,\n    mode: 'horizontal',\n    type: 'line',\n    value: item.price,\n    scaleID: 'y-axis-0'\n  };\n};\n\nexport const getDistanceLevels = (store, levels, sortType) => {\n  const { price = 0 } = store.statModule.stat;\n  const result = levels.map((level, idx) => {\n    return {\n      ...level,\n      distance: price\n        ? new Decimal(price)\n            .minus(level.price)\n            .div(Decimal.div(price, 100))\n            .toFixed(2)\n        : 0\n    };\n  });\n  switch (sortType) {\n    case 'asc':\n      return result.sort(({ price: a }, { price: b }) => a - b);\n    case 'desc':\n      return result.sort(({ price: a }, { price: b }) => b - a);\n    default:\n      return result;\n  }\n};\n\nexport const getAnnotations = store => {\n  const resistance = store.levelsModule.resistance\n    .filter(({ chartLine }) => chartLine)\n    .map(mapAnnotationsLine('resistatnce'));\n  const support = store.levelsModule.support\n    .filter(({ chartLine }) => chartLine)\n    .map(mapAnnotationsLine('support'));\n  const custom = store.levelsModule.custom\n    .filter(({ chartLine }) => chartLine)\n    .map(mapAnnotationsLine('custom'));\n  return [...resistance, ...support, ...custom];\n};\n","import React from 'react';\n\nconst Checkbox = ({ className, checked, onChange }) => {\n\n  return (\n    <label className='checkbox'><input  type='checkbox' className={`checkbox__input ${className}`} checked={checked} onChange={onChange}/></label>\n  )\n}\n\nexport default Checkbox;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  thresholdsUpdateAlert,\n  thresholdsUpdateAlertRequest,\n  toggleResistanceLine,\n} from '../store/actions';\nimport { getDistanceLevels } from '../store/getters';\nimport Checkbox from './common/form/Checkbox';\nimport { formatNumber } from '../utils/format';\n\nconst LevelsResistance = ({\n  thresholds,\n  thresholdsUpdateAlert,\n  thresholdsUpdateAlertRequest,\n  toggleResistanceLine,\n  levels = []\n}) => {\n  const handleChange = e => {\n    const { value } = e.target;\n    thresholdsUpdateAlert(value, 'resistance');\n  };\n\n  const updateValue = e => {\n    if (e) e.preventDefault();\n    thresholdsUpdateAlertRequest('resistance');\n  };\n\n  const handleEnter = e => {\n    if (e.key === 'Enter') {\n      document.getElementById('resistance').blur();\n    }\n  };\n\n  const levelsList = levels.map(({ idx, price, distance, chartLine }) => {\n    return (\n      <li className=\"levels__distance-item fadeIn\" key={idx}>\n        <div className=\"levels__distance-item-box\">\n          <span className=\"levels__value\">{formatNumber(price)}</span>\n          <span className=\"levels__value\">{distance}%</span>\n          <Checkbox className=\"levels__checkbox\" onChange={() => toggleResistanceLine(idx)} checked={chartLine}/>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"levels\">\n      <div className=\"levels__head\">\n        <h3 className=\"levels__title\">Resistance</h3>\n        <input\n          id=\"resistance\"\n          onChange={handleChange}\n          onKeyUp={handleEnter}\n          onBlur={updateValue}\n          value={thresholds.resistance}\n          type=\"number\"\n          placeholder=\"alert threshold in %\"\n          className=\"levels__input\"\n        />\n      </div>\n      <ul className=\"levels__distance-list\">{levelsList}</ul>\n    </div>\n  );\n};\n\nexport default connect(\n  store => {\n    return {\n      thresholds: store.thresholdsModule,\n      levels: getDistanceLevels(store, store.levelsModule.resistance, 'asc')\n    };\n  },\n  { toggleResistanceLine, thresholdsUpdateAlert, thresholdsUpdateAlertRequest }\n)(LevelsResistance);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  thresholdsUpdateAlert,\n  thresholdsUpdateAlertRequest,\n  toggleSupportLine\n} from '../store/actions';\nimport { getDistanceLevels } from '../store/getters';\nimport Checkbox from './common/form/Checkbox';\nimport { formatNumber } from '../utils/format';\n\nconst LevelsSupport = ({\n  thresholds,\n  thresholdsUpdateAlert,\n  thresholdsUpdateAlertRequest,\n  toggleSupportLine,\n  levels = [],\n}) => {\n  const handleChange = e => {\n    const { value } = e.target;\n    thresholdsUpdateAlert(value, 'support');\n  };\n\n  const updateValue = e => {\n    if (e) e.preventDefault();\n    thresholdsUpdateAlertRequest('support');\n  };\n\n  const handleEnter = e => {\n    if (e.key === 'Enter') {\n      document.getElementById('support').blur();\n    }\n  };\n\n  const levelsList = levels.map(({ idx, price, distance, chartLine }) => {\n    return (\n      <li className=\"levels__distance-item fadeIn\" key={idx}>\n        <div className=\"levels__distance-item-box\">\n          <span className=\"levels__value\">{formatNumber(price)}</span>\n          <span className=\"levels__value\">{distance}%</span>\n          <Checkbox className=\"levels__checkbox\" onChange={() => toggleSupportLine(idx)} checked={chartLine}/>\n        </div>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"levels\">\n      <div className=\"levels__head\">\n        <h3 className=\"levels__title\">Support</h3>\n        <input\n          id='support'\n          onChange={handleChange}\n          onKeyUp={handleEnter}\n          onBlur={updateValue}\n          value={thresholds.support}\n          type=\"number\"\n          placeholder=\"alert threshold in %\"\n          className=\"levels__input\"\n        />\n      </div>\n      <ul className=\"levels__distance-list\">{levelsList}</ul>\n    </div>\n  );\n};\n\nexport default connect(\n  store => {\n    return {\n      thresholds: store.thresholdsModule,\n      levels: getDistanceLevels(store, store.levelsModule.support, 'desc')\n    };\n  },\n  { thresholdsUpdateAlert, thresholdsUpdateAlertRequest, toggleSupportLine }\n)(LevelsSupport);\n","import React from \"react\";\n\nconst IconPlus = ({ className = '' }) => {\n  return (\n    <svg\n      className={className}\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 357 357\"\n    >\n      <g>\n        <g id=\"add\">\n          <path d=\"M357,204H204v153h-51V204H0v-51h153V0h51v153h153V204z\" />\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport default IconPlus;\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { customLevelAdd, customLevelRemove } from '../store/actions';\nimport IconPlus from './icons/IconPlus';\nimport models from '../models';\nimport { formatNumber } from '../utils/format';\nimport { getDistanceLevels } from '../store/getters';\n\nconst LevelsCustom = ({ customLevelAdd, customLevelRemove, levels }) => {\n  \n  const [newLevel, updateNewLevel] = useState(models.level);\n\n  const handleChange = e => {\n    const { value: price } = e.target;\n    updateNewLevel({ ...newLevel, price });\n  };\n\n  const addLevel = async () => {\n    const ok = await customLevelAdd(newLevel);\n    if (ok) updateNewLevel(models.level);\n  };\n\n  const handleEnter = (e) => {\n    if (e.key === 'Enter') {\n      addLevel();\n    }\n  }\n\n  const levelsList = levels.map(({ idx, price, distance }) => {\n    return (\n      <li className=\"levels__item\" key={idx}>\n        <span className=\"levels__value levels__value--custom\">\n          {formatNumber(price)} USD\n        </span>\n        <span className=\"levels__value levels__value--custom\">\n          {distance || 0}%\n        </span>\n        <button onClick={() => customLevelRemove({ idx, price })} className=\"levels__btn\">\n          <IconPlus className=\"levels__icon levels__icon--remove\" />\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"levels\">\n      <div className=\"levels__head\">\n        <h3 className=\"levels__title\">Custom Levels</h3>\n        <input\n          type=\"number\"\n          placeholder=\"alert threshold in %\"\n          className=\"levels__input\"\n        />\n      </div>\n      <div className=\"levels__inner levels__inner--custom\">\n        <ul className=\"levels__list\">{levelsList}</ul>\n        <div className=\"levels__item\">\n          <input\n            onKeyUp={handleEnter}\n            value={newLevel.price}\n            onChange={handleChange}\n            type=\"number\"\n            placeholder=\"USD price\"\n            className=\"levels__input levels__input--custom\"\n          />\n          <button onClick={addLevel} className=\"levels__btn\">\n            <IconPlus className=\"levels__icon\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  (store) => ({ levels: getDistanceLevels(store, store.levelsModule.custom) }),\n  { customLevelAdd, customLevelRemove }\n)(LevelsCustom);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport { getAnnotations } from '../store/getters';\n\nconst Chart = ({ timeframe, annotations }) => {\n\n  const [options, updateOptions] = useState({\n      \"width\": '100%',\n      \"height\": 510,\n      \"symbol\": \"BITMEX:XBTUSD\",\n      \"interval\": timeframe,\n      \"timezone\": \"Etc/UTC\",\n      \"theme\": \"Light\",\n      \"style\": \"1\",\n      \"locale\": \"en\",\n      \"toolbar_bg\": \"#f1f3f6\",\n      \"enable_publishing\": false,\n      \"hide_side_toolbar\": false,\n      \"allow_symbol_change\": true,\n      \"hide_side_toolbar\": false,\n      \"container_id\": \"tradingview_5abd4\",\n  });\n\n  const mountChart = (options) => {\n    new window.TradingView.widget(options);\n  }\n\n  useEffect(() => {\n    updateOptions((prevState) => ({ ...prevState, 'interval': timeframe }));\n  }, [timeframe]); \n\n  useEffect(() => {\n    mountChart(options);\n  }, [options]);\n\n  return (\n    <div className=\"tradingview-widget-container\">\n      <div id=\"tradingview_5abd4\"></div>\n    </div>\n    \n  );\n};\n\nexport default connect(\n  (store) => ({\n    levelsModule: store.levelsModule,\n    chart: store.levelsModule.chart,\n    annotations: getAnnotations(store),\n    timeframe: store.parametersModule.timeframe,\n  }),\n)(Chart);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst Loader = ({ store }) => {\n\n  const { levelsModule, statModule, parametersModule, thresholdsModule } = store;\n\n  const loading = [levelsModule.loading, statModule.loading, parametersModule.loading, thresholdsModule.loading].includes(true);\n  \n  if (!loading) {\n    return null;\n  }\n  return (\n    <div className='loader fadeIn'><div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div></div>\n  )\n}\n\nexport default connect(\n  (store) => ({ store })\n)(Loader);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchData, wsConnect } from '../store/actions';\nimport SectionHead from '../components/SectionHead';\nimport SectionFunding from '../components/SectionFunding';\nimport SectionVolume from '../components/SectionVolume';\nimport LevelsHead from '../components/LevelsHead';\nimport LevelsResistance from '../components/LevelsResistance';\nimport LevelsSupport from '../components/LevelsSupport';\nimport LevelsCustom from '../components/LevelsCustom';\nimport Chart from '../components/Chart';\nimport Loader from '../components/common/Loader';\n\nconst App = ({ fetchData, wsConnect }) => {\n\n  useEffect(() => {\n    wsConnect();\n    fetchData();\n  }, [wsConnect, fetchData])\n\n  return (\n    <div className=\"app\">\n      <Loader/>\n      <div className=\"app__container\">\n        <h2 className=\"app__title\">BitMEX XBTUSD Dashboard</h2>\n        <section className=\"app__section\">\n          <SectionHead />\n          <SectionFunding />\n          <SectionVolume />\n        </section>\n        <h2 className=\"app__title\">S/R Levels</h2>\n        <div className=\"app__section\">\n          <Chart />\n        </div>\n        <div className=\"app__section\">\n          <LevelsHead />\n          <LevelsResistance />\n          <LevelsSupport />\n          <LevelsCustom />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(\n  null,\n  { wsConnect, fetchData }\n)(App);\n","import {\n  LEVELS_REQUEST,\n  LEVELS_SUCCESS,\n  LEVELS_FAILURE,\n  LEVELS_UPDATE\n} from '../../constants';\n\nconst levelsModule = {\n  loading: false,\n  hasError: false,\n  chart: [],\n  support: [],\n  resistance: [],\n  custom: [],\n};\n\nconst levelsReducer = (state = { levelsModule }, action) => {\n\n  switch (action.type) {\n    case LEVELS_REQUEST:\n      return {\n        ...state.levelsModule,\n        loading: true,\n        hasError: false\n      };\n    case LEVELS_SUCCESS:\n      return {\n        ...state.levelsModule,\n        loading: false,\n        hasError: false\n      };\n    case LEVELS_FAILURE:\n      return {\n        ...state.levelsModule,\n        loading: false,\n        hasError: true\n      };\n    case LEVELS_UPDATE:\n      return {\n        ...state.levelsModule,\n        ...action.payload,\n      };\n    default:\n      return state.levelsModule;\n  }\n};\n\nexport default levelsReducer;\n","import models from '../../models';\nimport {\n  STAT_REQUEST,\n  STAT_SUCCESS,\n  STAT_FAILURE,\n  STAT_UPDATE\n} from '../../constants';\n\nconst statModule = {\n  loading: false,\n  hasError: false,\n  stat: {...models.stat}\n};\n\nconst statReducer = (state = { statModule }, action) => {\n\n  switch (action.type) {\n    case STAT_REQUEST:\n      return {\n        ...state.statModule,\n        loading: true,\n        hasError: false\n      };\n    case STAT_SUCCESS:\n      return {\n        ...state.statModule,\n        loading: false,\n        hasError: false\n      };\n    case STAT_FAILURE:\n      return {\n        ...state.statModule,\n        loading: false,\n        hasError: true\n      };\n    case STAT_UPDATE:\n      return {\n        ...state.statModule,\n        stat: { ...state.statModule.stat, ...action.payload },\n      };\n    default:\n      return state.statModule;\n  }\n};\n\nexport default statReducer;\n","import {\n  PARAMETERS_REQUEST,\n  PARAMETERS_SUCCESS,\n  PARAMETERS_FAILURE,\n  PARAMETERS_UPDATE,\n  TIMEFRAME_UPDATE\n} from '../../constants';\n\nconst parametersModule = {\n  loading: false,\n  hasError: false,\n  parameters: [],\n  timeframe: 'D',\n};\n\nconst parametersReducer = (state = { parametersModule }, action) => {\n\n  switch (action.type) {\n    case PARAMETERS_REQUEST:\n      return {\n        ...state.parametersModule,\n        loading: true,\n        hasError: false\n      };\n    case PARAMETERS_SUCCESS:\n      return {\n        ...state.parametersModule,\n        loading: false,\n        hasError: false\n      };\n    case PARAMETERS_FAILURE:\n      return {\n        ...state.parametersModule,\n        loading: false,\n        hasError: true\n      };\n    case PARAMETERS_UPDATE:\n      return {\n        ...state.parametersModule,\n        parameters: [...action.payload],\n      };\n    case TIMEFRAME_UPDATE:\n      return {\n        ...state.parametersModule,\n        timeframe: [...action.payload],\n      };\n    default:\n      return state.parametersModule;\n  }\n};\n\nexport default parametersReducer;\n","import {\n  THRESHOLDS_REQUEST,\n  THRESHOLDS_SUCCESS,\n  THRESHOLDS_FAILURE,\n  THRESHOLDS_UPDATE,\n  THRESHOLDS_UPDATE_ALERT\n} from '../../constants';\n\nconst thresholdsModule = {\n  loading: false,\n  hasError: false,\n  thresholds: [],\n  volume_1m: '',\n  volume_5m: '',\n  volume_1h: '',\n  volume_1d: '',\n  resistance: '',\n  OPEN_INTEREST: '',\n  support: '',\n};\n\nconst thresholdsReducer = (state = { thresholdsModule }, action) => {\n\n  switch (action.type) {\n    case THRESHOLDS_REQUEST:\n      return {\n        ...state.thresholdsModule,\n        loading: true,\n        hasError: false\n      };\n    case THRESHOLDS_SUCCESS:\n      return {\n        ...state.thresholdsModule,\n        loading: false,\n        hasError: false\n      };\n    case THRESHOLDS_FAILURE:\n      return {\n        ...state.thresholdsModule,\n        loading: false,\n        hasError: true\n      };\n    case THRESHOLDS_UPDATE:\n      return {\n        ...state.thresholdsModule,\n        thresholds: [...action.payload],\n      };\n    case THRESHOLDS_UPDATE_ALERT:\n      return {\n        ...state.thresholdsModule,\n        ...action.payload,\n      };\n    default:\n      return state.thresholdsModule;\n  }\n};\n\nexport default thresholdsReducer;\n","import {\n  WS_CONNECTED,\n  WS_DISCONNECTED\n} from '../../constants';\n\nconst websocketModule = {\n  connected: false,\n};\n\nconst websocketReducer = (state = { websocketModule }, action) => {\n\n  switch (action.type) {\n    case WS_CONNECTED:\n      return {\n        ...state.websocketModule,\n        connected: true,\n      };\n    case WS_DISCONNECTED:\n      return {\n        ...state.websocketModule,\n        connected: false,\n      };\n    default:\n      return state.websocketModule;\n  }\n};\n\nexport default websocketReducer;\n","import { levelsReducer, parametersReducer, thresholdsReducer, statReducer, websocketReducer } from './modules';\n\nconst reducer = (state, action) => {\n  return {\n    levelsModule: levelsReducer(state, action),\n    parametersModule: parametersReducer(state, action),\n    thresholdsModule: thresholdsReducer(state, action),\n    statModule: statReducer(state, action),\n    websocketModule: websocketReducer(state, action),\n  };\n};\n\nexport default reducer;\n","import {\n  WS_CONNECT,\n  WS_DISCONNECTED,\n  WS_DISCONNECT,\n  WS_ERROR,\n  WS_CONNECTED,\n} from '../../constants';\nimport logger from '../../services/logger';\nimport { WESOCKET_ROOT } from '../../api';\nimport socketMessages from '../../services/socketMessages';\n\nconst socketMiddleware = () => {\n  let socket = null;\n  let originalSend = null;\n\n  const onOpen = store => e => {\n    logger.info({ type: e.type, url: e.target.url }, 'WEBSOCKET OPEN');\n    store.dispatch(WS_CONNECTED);\n  };\n\n  const onClose = store => e => {\n    logger.info({ type: e.type, url: e.target.url }, 'WEBSOCKET DISCONECTED');\n    store.dispatch(WS_DISCONNECTED);\n  };\n\n  const onError = store => e => {\n    logger.info({ type: e.type, url: e.target.url }, 'WEBSOCKET ERROR');\n    store.dispatch(WS_ERROR);\n  };\n\n  const onSend = (...args) => {\n    logger.info(args, 'WEBSOCKET SEND');\n    return originalSend.apply(socket, args);\n  };\n\n  return store => next => action => {\n    switch (action.type) {\n      case WS_CONNECT:\n        if (socket !== null) {\n          socket.close();\n        }\n        logger.info(WESOCKET_ROOT, 'WEBSOCKET CONNECTION');\n        socket = new WebSocket(action.payload);\n        originalSend = socket.send;\n        socket.onopen = onOpen(store);\n        socket.send = onSend;\n        socket.onclose = onClose(store);\n        socket.onerror = onError(store);\n        socket.onmessage = socketMessages(store);\n        break;\n\n      case WS_CONNECTED:\n        socket.send(\n          JSON.stringify({\n            subscribe: 'XBTUSD'\n          })\n        );\n        socket.send(\n          JSON.stringify({\n            subscribe: 'trade_volume_XBTUSD'\n          })\n        );\n        socket.send(\n          JSON.stringify({\n            subscribe: 'volume1m_XBTUSD'\n          })\n        );\n        socket.send(\n          JSON.stringify({\n            subscribe: 'volume5m_XBTUSD'\n          })\n        );\n        socket.send(\n          JSON.stringify({\n            subscribe: 'volume1h_XBTUSD'\n          })\n        );\n        socket.send(\n          JSON.stringify({\n            subscribe: 'volume1d_XBTUSD'\n          })\n        );\n        socket.send(\n          JSON.stringify({\n            subscribe: 'instrument_XBTUSD'\n          })\n        );\n        break;\n\n      case WS_DISCONNECT:\n        if (socket !== null) {\n          socket.close();\n        }\n        socket = null;\n        originalSend = null;\n        logger.info('', 'WEBSOCKET CLOSED');\n        break;\n\n      case WS_ERROR:\n        if (socket !== null) {\n          socket.close();\n        }\n        break;\n\n      default:\n        return next(action);\n    }\n  };\n};\n\nexport default socketMiddleware();\n","import { STAT_UPDATE } from '../constants';\nimport has from '../utils/has';\nimport logger from './logger';\n\nexport default (store) => (e) => {\n  const payload = JSON.parse(e.data);\n  logger.info(payload, 'WEBSOCKET MESSAGE');\n  switch (payload.type) {\n    case 'trade':\n      store.dispatch([STAT_UPDATE, { price: payload['price'] }]);\n      break;\n    case 'trade_volume_XBTUSD':\n      store.dispatch([\n        STAT_UPDATE,\n        { volume_of_last: payload['trade_volume'] }\n      ]);\n      break;\n    case 'volume1m':\n      store.dispatch([\n        STAT_UPDATE,\n        {\n          volume1m_change: payload['volume1m_change'],\n          volume1m_change_percent: payload['volume1m_change_percent']\n        }\n      ]);\n      break;\n    case 'volume5m':\n      store.dispatch([\n        STAT_UPDATE,\n        {\n          volume5m_change: payload['volume5m_change'],\n          volume5m_change_percent: payload['volume5m_change_percent']\n        }\n      ]);\n      break;\n    case 'volume1h':\n      store.dispatch([\n        STAT_UPDATE,\n        {\n          volume1h_change: payload['volume1h_change'],\n          volume1h_change_percent: payload['volume1h_change_percent']\n        }\n      ]);\n      break;\n    case 'volume1d':\n      store.dispatch([\n        STAT_UPDATE,\n        {\n          volume1d_change: payload['volume1d_change'],\n          volume1d_change_percent: payload['volume1d_change_percent']\n        }\n      ]);\n      break;\n    case 'instrument':\n      switch (true) {\n        case has(payload, 'open_interest'):\n          store.dispatch([\n            STAT_UPDATE,\n            { open_inerest: payload['open_interest'] }\n          ]);\n          break;\n        case has(payload, 'predicted_funding_rate'):\n            store.dispatch([\n              STAT_UPDATE,\n              {\n                next_funding_rate_change: payload['next_funding_rate_change'],\n                predicted_funding_rate: payload['predicted_funding_rate']\n              }\n            ]);\n            break;\n        case has(payload, 'current_funding_rate'):\n          store.dispatch([\n            STAT_UPDATE,\n            {\n              current_funding_rate: payload['current_funding_rate'],\n              next_funding_rate_change: payload['next_funding_rate_change']\n            }\n          ]);\n          break;\n        default:\n            break;\n      }\n      break;\n    default:\n      break;\n  }\n};\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport reducer from './reducer';\nimport thunk from 'redux-thunk';\nimport actionStringMiddleware from './middlewares/actionStringMiddleware';\nimport socketMiddleware from './middlewares/socketMiddleware';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst middlewares = [thunk, actionStringMiddleware, socketMiddleware];\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middlewares)),\n);\n\nexport default store;\n","export default () => (next) => (action) => {\n\n  if (typeof action === 'string') {\n    return next({\n      type: action,\n    });\n  }\n  if (Array.isArray(action)) {\n    const [ type, payload ] = action;\n    return next({\n      type,\n      payload,\n    });\n  }\n\n  return next(action);\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/styles.scss';\nimport App from './app/App';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n"],"sourceRoot":""}